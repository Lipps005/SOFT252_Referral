/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.*;
import java.util.*;
import javax.swing.JOptionPane;
import my.models.Medicine;
import my.models.Patient;
import my.models.Prescription;
import my.models.userevents.Listable.FilterByString;
import my.models.userevents.Listable.FilterNameIsString;
import my.models.userevents.Listable.IFilterByStringBehaviour;
import my.models.userevents.Listable.ILoadAllBehaviour;
import my.models.userevents.Listable.ListableDirectory;
import my.models.userevents.Listable.LoadObjectsFromFile;
import my.models.userevents.SubFrameCloseListener;

/**
 *
 * @author samue
 */
public class DispensePrescription extends javax.swing.JFrame {

   private final Patient patient;
   private ListableDirectory directory;
   private DefaultListModel PendingPrescriptionsModel;
   private ILoadAllBehaviour loadBehaviour;
   private SubFrameCloseListener listener;
   /**
    * Creates new form DispenseMedicine
    */
   public DispensePrescription(Patient patient) {
      initComponents();
      this.setVisible(true);
      this.patient = patient;
      this.PatientIDJTextField.setText(this.patient.getUID());
      this.PatientNameJTextField.setText(this.patient.toString());
      this.PatientAddressJTextField.setText(this.patient.getAddress());
      //this.PatientAddressJTextField.setText(this.patient);
      
      this.directory = new ListableDirectory.ListableTemplateBuilder()
                 .AddTopLevelFolder("users")
                 .AddFolderUID(this.patient.getUID())
                 .AddSubFolder("prescriptions")
                 .Build();
      this.loadBehaviour = new LoadObjectsFromFile();
      this.PendingPrescriptionsModel = loadBehaviour.LoadAll(directory);
      this.PendingPrescriptionsJList.setModel(PendingPrescriptionsModel);
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      DispensePrescriptionJButton = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      PendingPrescriptionsJList = new javax.swing.JList<>();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      jLabel4 = new javax.swing.JLabel();
      jScrollPane2 = new javax.swing.JScrollPane();
      PatientAddressJTextField = new javax.swing.JTextArea();
      PatientNameJTextField = new javax.swing.JTextField();
      PatientIDJTextField = new javax.swing.JTextField();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      addWindowListener(new java.awt.event.WindowAdapter() {
         public void windowClosing(java.awt.event.WindowEvent evt) {
            formWindowClosing(evt);
         }
      });

      DispensePrescriptionJButton.setText("Dispense");
      DispensePrescriptionJButton.setEnabled(false);
      DispensePrescriptionJButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            DispensePrescriptionJButtonActionPerformed(evt);
         }
      });

      PendingPrescriptionsJList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
      PendingPrescriptionsJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            PendingPrescriptionsJListValueChanged(evt);
         }
      });
      jScrollPane1.setViewportView(PendingPrescriptionsJList);

      jLabel1.setText("Pending Prescriptions");

      jLabel2.setText("Patient ID:");

      jLabel3.setText("Patient Name:");

      jLabel4.setText("Patient Address:");

      PatientAddressJTextField.setEditable(false);
      PatientAddressJTextField.setColumns(20);
      PatientAddressJTextField.setRows(5);
      jScrollPane2.setViewportView(PatientAddressJTextField);

      PatientNameJTextField.setEditable(false);

      PatientIDJTextField.setEditable(false);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel1)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PatientIDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PatientNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jLabel4)))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(DispensePrescriptionJButton)))
            .addContainerGap(26, Short.MAX_VALUE))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(jLabel2)
                     .addComponent(jLabel3)
                     .addComponent(jLabel4)
                     .addComponent(PatientNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(PatientIDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(28, 28, 28)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addComponent(DispensePrescriptionJButton)))
               .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void PendingPrescriptionsJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_PendingPrescriptionsJListValueChanged
      DispensePrescriptionJButton.setEnabled(false);
      if(PendingPrescriptionsModel.isEmpty())
      {
         PendingPrescriptionsJList.setEnabled(false);
         return;
      }
      try
      {
         if(!evt.getValueIsAdjusting() && !PendingPrescriptionsJList.isSelectionEmpty())
        {
         Prescription prescription = (Prescription)PendingPrescriptionsModel.getElementAt(PendingPrescriptionsJList.getSelectedIndex());
         ListableDirectory medDirectory = new ListableDirectory.ListableTemplateBuilder().AddTopLevelFolder("medicines").Build();
         ILoadAllBehaviour loadbehaviour = new LoadObjectsFromFile();
         DefaultListModel model = loadbehaviour.LoadAll(medDirectory);
         IFilterByStringBehaviour filterbymedicinename = new FilterNameIsString();
         model = filterbymedicinename.filterByString(model, prescription.getSearchString());
         Medicine medicine = (Medicine)model.firstElement();
         int stockleft = medicine.StockLeft();
         if(stockleft < prescription.getRequiredStock())
         {
            JOptionPane.showMessageDialog(null, "Not enough stock left", "Request Sent", JOptionPane.INFORMATION_MESSAGE);
            PendingPrescriptionsJList.clearSelection();
         }
         else
         {
            DispensePrescriptionJButton.setEnabled(true);
         }
         
        }
      }
      catch(NullPointerException e)
      {
         
      }
      
      
      
   }//GEN-LAST:event_PendingPrescriptionsJListValueChanged

   private void DispensePrescriptionJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispensePrescriptionJButtonActionPerformed

      if(!PendingPrescriptionsJList.isSelectionEmpty())
      {
         Prescription prescription = (Prescription)PendingPrescriptionsModel.getElementAt(PendingPrescriptionsJList.getSelectedIndex());
         ListableDirectory medDirectory = new ListableDirectory.ListableTemplateBuilder().AddTopLevelFolder("medicines").Build();
         ILoadAllBehaviour loadbehaviour = new LoadObjectsFromFile();
         DefaultListModel model = loadbehaviour.LoadAll(medDirectory);
         IFilterByStringBehaviour filterbymedicinename = new FilterNameIsString();
         model = filterbymedicinename.filterByString(model, prescription.getSearchString());
         Medicine medicine = (Medicine)model.firstElement();
         medicine.dispenseStock(prescription.getRequiredStock());
         medicine.saveMedicine();
         medDirectory = new ListableDirectory.ListableTemplateBuilder().AddTopLevelFolder("users").AddFolderUID(patient.getUID()).AddSubFolder("prescriptions").Build();
         File file = new File(medDirectory.GetDirectory()+prescription.getUID()+".ser");
         file.delete();
         PendingPrescriptionsModel.removeElement(prescription);
         PendingPrescriptionsJList.setModel(PendingPrescriptionsModel);
         PendingPrescriptionsJList.clearSelection();
      }

   }//GEN-LAST:event_DispensePrescriptionJButtonActionPerformed

   
   private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      this.listener.onSubFrameClose(this);
   }//GEN-LAST:event_formWindowClosing

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(DispensePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(DispensePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(DispensePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(DispensePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            //new DispensePrescription().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton DispensePrescriptionJButton;
   private javax.swing.JTextArea PatientAddressJTextField;
   private javax.swing.JTextField PatientIDJTextField;
   private javax.swing.JTextField PatientNameJTextField;
   private javax.swing.JList<String> PendingPrescriptionsJList;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   // End of variables declaration//GEN-END:variables

   void SubFrameCloseListener(SubFrameCloseListener listener) {
     this.listener = listener;
   }
   
   
   public List<Component> getDispensePrescriptionComponents()
   {
      List<Component> components = new ArrayList<>();
      components.add(DispensePrescriptionJButton);
      components.add(PendingPrescriptionsJList);
      return components;
   }
   
}
